@model TechnicalService.Entity.ViewsModel.FaultViewModel

@{
    ViewBag.Title = "FaultReport";
    Layout = "~/Views/Shared/Layouts/_UserPageLayout.cshtml";
}

<div id="content" class="clearfix">

    <div class="container">

        <div class="row">


            <!-- *** LEFT COLUMN ***
            _________________________________________________________ -->
            @using (Html.BeginForm("FaultReport", "Fault", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <div class="col-md-9 clearfix">

                    <div class="box clearfix">
                        <div class="heading">
                            <h3 class="text-uppercase">Arıza Kaydı</h3>
                           
                        </div>
                        @if (ViewBag.sonuc != null)
                        {
                            <div class="alert alert-info" role="alert">@ViewBag.sonuc</div>
                        }

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                      
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.CategoryID)

                                    @Html.DropDownListFor(Model => Model.CategoryID, new SelectList(ViewBag.Categories as System.Collections.IEnumerable, "Value", "Text"), "Kategori Seçiniz", new { onchange = "UpdateList()",  @class = "form-control" , id = "categoryList" })
                                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BrandID)
                                    @Html.DropDownListFor(Model => Model.BrandID, new SelectList(ViewBag.Brands as System.Collections.IEnumerable, "Value", "Text"), "Marka Seçiniz", new { id = "brandList", onchange="UpdateList()", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModelID)
                                    @Html.DropDownListFor(Model => Model.ModelID, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
            "Model Seçiniz", new { id = "modelList", @class = "form-control"  })
                                    @Html.ValidationMessageFor(model => model.ModelID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>


                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">


                                    @Html.LabelFor(model => model.Title)

                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description)

                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.InvoiceCode)

                                    @Html.EditorFor(model => model.InvoiceCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.InvoiceCode, "", new { @class = "text-danger" })

                                </div>
                            </div>
                              
                           
                            <div class='col-sm-6'>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TransactionDate)
                                    <div class='input-group date' id='datetimepicker2'>
                                      
                                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { id = "dt", @class = "form-control", @Value = DateTime.Now } })
                                       
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <script type="text/javascript">
                                $(function () {
                                    $('#datetimepicker2').datetimepicker({
                                        locale: 'tr'
                                    });
                                });
                            </script>

                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AddressDescription)

                                    @Html.EditorFor(model => model.AddressDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddressDescription, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.Fault_Photos)

                                @Html.TextBoxFor(model => model.Fault_Photos, new { @class = "form-control", type = "file", multiple = true, accept = ".jpeg , .jpg,.gif" })



                            </div>
                        </div>
                        <div class="col-sm-12 text-center">
                            <button type="submit" class="btn btn-template-main"><i class="fa fa-save"></i>Kaydet</button>

                        </div>
                    </div>
                </div>

                <div class="col-md-3">





                    <div class="box clearfix">
                        <div class="heading">
                            <h3 class="text-uppercase">Konumunuz</h3>
                            

                        </div>
                        <div class="panel-body" id="map" style="height:300px;"></div>
                        @Html.HiddenFor(model => model.lat, new { id = "lat" })
                        @Html.HiddenFor(model => model.lng, new { id = "long" })

                    </div>

                </div> }
        </div>
    </div>
</div>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP53g7yo4Rm0Fc5qFg7_iiK3k8AWSNuyE&libraries=places&sensor=false" " type="text/javascript"></script>

<script type="text/javascript">
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    }
    else {
        alert("Tarayıcınız lokasyon desteklemiyor!...")
    }
    function showPosition(pos) {
        console.log(pos);
        var latlng = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
        var latcoor = pos.coords.latitude;
        var lngcoor = pos.coords.longitude;
        var options = {
            zoom: 12,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            draggableCursor: "crosshair",
            scrollwheel: true,
            streetViewControl: false
        };
        var map = new google.maps.Map(document.getElementById("map"), options);
        var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            title: "Bulunduğunuz Konum"
        });
        google.maps.event.addListener(map, "click", function (location) {
            GetLocationInfo(location.latLng);
        });
        var initListener;

        function GetLocationInfo(latlng) {
            if (latlng != null) {
                ShowLatLong(latlng);
                UpdateStreetView(latlng);

            }
        }
        function GotoLatLong() {
            if ($("#lat").val() != "" && $("#long").val() != "") {
                var lat = $("#lat").val();
                var long = $("#long").val();
                var latLong = new google.maps.LatLng(lat, long);
                ShowLatLong(latLong);
                map.setCenter(latLong);
                UpdateStreetView(latLong);
            }
        }

        function ShowLatLong(latLong) {
            // show the lat/long
            if (marker != null) {
                marker.setMap(null);
            }
            marker = new google.maps.Marker({
                position: latLong,
                map: map
            });

            latcoor = latLong.lat();
            lngcoor = latLong.lng();

        }
        $("#lat").val(latcoor);
        $("#long").val(lngcoor);
    }



</script>

<script type="text/javascript">
    function UpdateList() {
        var brandID = $("#brandList").val();
        var catID = $("#categoryList").val();
        $.getJSON("../UserBase/LoadModel", { CatId: catID, BrandId: brandID },
            function (data) {
                var select = $("#modelList");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Model Seçiniz"
                }));
                $.each(data, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
    };
    $("#dt").val($.now());
</script>